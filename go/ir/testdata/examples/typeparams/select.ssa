# Name: command-line-arguments.foo
# Package: command-line-arguments
func foo[T chan int](x T):
b0: # entry
	t1 = Const <int> {1}
	t2 = Const <int> {0}
	t3 = Const <int> {2}
	t4 = Parameter <T> {x}
	t5 = SelectBlocking <(index int, ok bool, int, int)> [<-t4, t4<-t1, <-t4]
	t6 = Extract <int> [0] (index) t5
	ConstantSwitch t6 t2 t1 t3 → b3 b4 b5

b1: ← b2 # exit
	Return

b2: ← b3 b4 b5 # select.done
	t9 = Call <()> close t4
	Jump → b1

b3: ← b0 # select.body
	Jump → b2

b4: ← b0 # select.body
	Jump → b2

b5: ← b0 # select.body
	t13 = Extract <int> [3] () t5
	BlankStore t13
	Jump → b2

# Name: command-line-arguments.init
# Package: command-line-arguments
# Synthetic: package initializer
func init():
b0: # entry
	t1 = Const <bool> {true}
	t2 = Load <bool> init$guard
	If t2 → b1 b2

b1: ← b0 b2 # exit
	Return

b2: ← b0 # init.start
	Store {bool} init$guard t1
	Jump → b1
