# Name: command-line-arguments.fn1
# Package: command-line-arguments
func fn1[a *S](x a):
b0: # entry
	t1 = Const <int> {5}
	t2 = Parameter <a> {x}
	t3 = FieldAddr <*E> [0] (E) t2
	t4 = FieldAddr <*int> [0] (val) t3
	Store {int} t4 t1
	Jump → b1

b1: ← b0 # exit
	Return

# Name: command-line-arguments.fn2
# Package: command-line-arguments
# Locals:
#   0:	t2 b
func fn2[b S]():
b0: # entry
	t1 = Const <int> {5}
	t2 = StackAlloc <*b>
	t3 = FieldAddr <*E> [0] (E) t2
	t4 = FieldAddr <*int> [0] (val) t3
	Store {int} t4 t1
	Jump → b1

b1: ← b0 # exit
	Return

# Name: command-line-arguments.init
# Package: command-line-arguments
# Synthetic: package initializer
func init():
b0: # entry
	t1 = Const <bool> {true}
	t2 = Load <bool> init$guard
	If t2 → b1 b2

b1: ← b0 b2 # exit
	Return

b2: ← b0 # init.start
	Store {bool} init$guard t1
	Jump → b1
